scalar Date

type User {
  id: ID!
  username: String!
  password: String!
}

type Space {
  id: String!
  title: String!
  createdAt: Date!
  complPercent: Int!
  userId: String!
}

type Topic {
  id: ID!
  title: String!
  createdAt: Date!
  dueDate: Date
  spaceId: String!
  duration: Date
  complPercent: Int!
  checkListsIds: [String!]!
}

type CheckList {
  id: ID!
  title: String!
  createdAt: Date!
  dueDate: Date
  topicId: String!
  duration: Date
  complPercent: Int!
  todosIds: [String!]!
}

type Meta {
  id: ID!
  url: String!
  title: String
  description: String
  img: String
  hostname: String
  favicon: String
}

type Todo {
  id: ID!
  title: String!
  createdAt: Date!
  isWatched: Boolean!
  watchedAt: Date
  dueDate: Date
  checkListId: String!
  duration: Date
  meta: Meta
}

type Query {
  getSpaces: [Space!]!
  getTopicsIds(spaceId: ID!): [String!]!
  getTopicById(topicId: ID!): Topic
  getCheckListById(checkListId: ID!): CheckList
  getTodoById(todoId: ID!): Todo
}

type AuthPayload {
  token: String
  user: User
  error: String
}

type Payload {
  success: Boolean
  error: String
}

type Mutation {
  addSpace(title: String!): Payload!
  addTopic(title: String!, spaceId: String!): Payload!
  addCheckList(title: String!, topicId: String!): Payload!
  addTodo(title: String!, checkListId: String!): Payload!

  updateSpace(spaceId: String!, title: String!): Payload!
  updateTopic(
    spaceId: String!
    topicId: String!
    title: String!
    dueDate: Date
    duration: Date
    complPercent: Int
  ): Payload!
  updateCheckList(
    topicId: String!
    checkListId: String!
    title: String!
    dueDate: Date
    duration: Date
    complPercent: Int
  ): Payload!
  updateTodo(
    checkListId: String!
    todoId: String!
    title: String!
    dueDate: Date
    duration: Date
    complPercent: Int
    isWatched: Boolean
  ): Payload!

  deleteSpace(spaceId: String!): Payload!
  deleteTopic(spaceId: String!, topicId: String!): Payload!
  deleteCheckList(topicId: String!, checkListId: String!): Payload!
  deleteTodo(checkListId: String!, todoId: String!): Payload!

  signup(username: String!, password: String!): AuthPayload!
  login(username: String!, password: String!): AuthPayload!
}

type TopicsIdsUpdatedPayload {
  topicsIds: [String!]!
  spaceId: String!
}

type CheckListsIdsUpdatedPayload {
  checkListsIds: [String!]!
  topicId: String!
}

type TodosIdsUpdatedPayload {
  todosIds: [String!]!
  checkListId: String!
}

type Subscription {
  spacesUpdated: [Space!]!
  topicsIdsUpdated: TopicsIdsUpdatedPayload!
  checkListsIdsUpdated: CheckListsIdsUpdatedPayload!
  todosIdsUpdated: TodosIdsUpdatedPayload!
}
