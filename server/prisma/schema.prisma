generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  password String
  username String  @unique
  spaces   Space[]
}

model Space {
  id           String   @id @default(cuid())
  title        String
  createdAt    DateTime @default(now())
  complPercent Int      @default(0)
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  topics       Topic[]
}

model Topic {
  id           String     @id @default(cuid())
  title        String
  createdAt    DateTime   @default(now())
  dueDate      DateTime?
  duration     DateTime?
  complPercent Int        @default(0)
  spaceId      String
  space        Space      @relation(fields: [spaceId], references: [id])
  todoLists    TodoList[]
}

model TodoList {
  id           String    @id @default(cuid())
  complPercent Int       @default(0)
  createdAt    DateTime  @default(now())
  dueDate      DateTime?
  duration     DateTime?
  title        String
  topicId      String
  topic        Topic     @relation(fields: [topicId], references: [id])
  todos        Todo[]
}

model Meta {
  id          String  @id @default(cuid())
  url         String
  title       String?
  description String?
  img         String?
  todoId      String  @unique
  todo        Todo    @relation(fields: [todoId], references: [id])
}

model Todo {
  id         String    @id @default(cuid())
  title      String
  createdAt  DateTime  @default(now())
  isWatched  Boolean   @default(false)
  watchedAt  DateTime?
  dueDate    DateTime?
  duration   DateTime?
  todoListId String
  todoList   TodoList  @relation(fields: [todoListId], references: [id])
  meta       Meta?
}
